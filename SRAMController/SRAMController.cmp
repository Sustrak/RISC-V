	component SRAMController is
		port (
			clk_clk                  : in    std_logic                     := 'X';             -- clk
			controller_address       : in    std_logic_vector(19 downto 0) := (others => 'X'); -- address
			controller_byteenable    : in    std_logic_vector(1 downto 0)  := (others => 'X'); -- byteenable
			controller_read          : in    std_logic                     := 'X';             -- read
			controller_write         : in    std_logic                     := 'X';             -- write
			controller_writedata     : in    std_logic_vector(15 downto 0) := (others => 'X'); -- writedata
			controller_readdata      : out   std_logic_vector(15 downto 0);                    -- readdata
			controller_readdatavalid : out   std_logic;                                        -- readdatavalid
			reset_reset_n            : in    std_logic                     := 'X';             -- reset_n
			sram_DQ                  : inout std_logic_vector(15 downto 0) := (others => 'X'); -- DQ
			sram_ADDR                : out   std_logic_vector(19 downto 0);                    -- ADDR
			sram_LB_N                : out   std_logic;                                        -- LB_N
			sram_UB_N                : out   std_logic;                                        -- UB_N
			sram_CE_N                : out   std_logic;                                        -- CE_N
			sram_OE_N                : out   std_logic;                                        -- OE_N
			sram_WE_N                : out   std_logic                                         -- WE_N
		);
	end component SRAMController;

